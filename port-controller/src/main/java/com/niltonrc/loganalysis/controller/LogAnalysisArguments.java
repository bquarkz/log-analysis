package com.niltonrc.loganalysis.controller;

import com.beust.jcommander.Parameter;

public class LogAnalysisArguments
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Special Fields And Injections
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Fields
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Parameter( names = { "-f", "--filename" },
            description = "a full path for the log-file that should be analysed",
            required = true )
    private String filename;

    @Parameter( names = { "-bs", "--batch-size" },
            description = "batch size for reading",
            required = false )
    private Integer batchSize = 3000;

    @Parameter( names = { "-tps", "--thread-pool-size" },
            description = "thread pool size",
            required = false )
    private Integer threadPoolSize = 10;


    @Parameter( names = { "-gz", "--gun-zip" },
            description = "flag a compressed log-file using gun-zip (currently not available)",
            required = false )
    private boolean isGz = false;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Constructors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Factories
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Getters And Setters
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public String getFilename()
    {
        return filename;
    }

    public Integer getBatchSize()
    {
        return batchSize;
    }

    public Integer getThreadPoolSize()
    {
        return threadPoolSize;
    }

    public boolean isGz()
    {
        return isGz;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Inner Classes And Patterns
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
